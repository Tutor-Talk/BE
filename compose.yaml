services:
  # MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_tutor_talk
    restart: always # 컨테이너가 중단되었을 때 자동으로 재시작
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3310:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - network_tutor_talk
    healthcheck: # 컨테이너 상태 확인
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot
  backend:
    build: .
    container_name: spring_boot_tutor_talk
    restart: always
    ports:
      - "8090:8080"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_tutor_talk:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      APP_JWT_SECRET: ${APP_JWT_SECRET}
      APP_JWT_EXPIRATION_MS: ${APP_JWT_EXPIRATION_MS}
#      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
#      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - network_tutor_talk

networks:
  network_tutor_talk:
    driver: bridge

volumes:
  mysql_data: